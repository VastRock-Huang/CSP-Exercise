/*
	题目编号：201612-1
	题目名称：中间数

	题干：
		在一个整数序列a1, a2, …, an中，如果存在某个数，大于它的整数数量等于小
	于它的整数数量，则称其为中间数。在一个序列中，可能存在多个下标不相同的中间
	数，这些中间数的值是相同的。 
		给定一个整数序列，请找出这个整数序列的中间数的值。
	
	输入：
		输入的第一行包含了一个整数n，表示整数序列中数的个数。 
		第二行包含n个正整数，依次表示a1, a2, …, an。
	输出：
		如果约定序列的中间数存在，则输出中间数的值，否则输出-1表示不存在中间数。
*/
/*
#include<iostream>
#include<algorithm>

using namespace std;

int main()
{
	int n;
	cin >> n;
	int* a = new int[n];
	for (int i = 0; i < n; i++)
		cin >> a[i];
	sort(a, a + n);
	int i = n / 2;	//中间数只可能出现在数组排序后中间位置
	int mid = a[i];
	for (; i >= 0 &&a[i] == mid; i--);	//排除重复的值
	int temp = i + 1;
	for (i = n / 2; i < n && a[i] == mid; i++);
	if (temp == n - i)
		cout << mid;
	else
		cout << -1;

	delete[] a;
	return 0;
}


/*
	题目编号：201612-2
	题目名称：工资计算

	题干：	
		小明的公司每个月给小明发工资，而小明拿到的工资为交完个人所得税之后的工资。
	假设他一个月的税前工资（扣除五险一金后、未扣税前的工资）为S元，则他应交的个人
	所得税按如下公式计算： 
　		1） 个人所得税起征点为3500元，若S不超过3500，则不交税，3500元以上的部分才
	计算个人所得税，令A=S-3500元； 
　　	2） A中不超过1500元的部分，税率3%； 
　　	3） A中超过1500元未超过4500元的部分，税率10%； 
　　	4） A中超过4500元未超过9000元的部分，税率20%； 
　　	5） A中超过9000元未超过35000元的部分，税率25%； 
　　	6） A中超过35000元未超过55000元的部分，税率30%； 
　　	7） A中超过55000元未超过80000元的部分，税率35%； 
　　	8） A中超过80000元的部分，税率45%； 
		例如，如果小明的税前工资为10000元，则A=10000-3500=6500元，其中不超过1500元
	部分应缴税1500×3%=45元，超过1500元不超过4500元部分应缴税(4500-1500)×10%=300元，
	超过4500元部分应缴税(6500-4500)×20%=400元。总共缴税745元，税后所得为9255元。 
		已知小明这个月税后所得为T元，请问他的税前工资S是多少元。

	输入：
		输入的第一行包含一个整数T，表示小明的税后所得。所有评测数据保证小明的税前工
	资为一个整百的数。
	输出：
		输出一个整数S，表示小明的税前工资。
*/
/*
#include<iostream>

using namespace std;

int main()
{
	float rate[] = { 0,0.03,0.1,0.2,0.25,0.3,0.35,0.45 };
	int zone[7] = { 3500,3500 + 1500,3500 + 4500,3500 + 9000,3500 + 35000,
		3500 + 55000,3500 + 80000 };
	int levels[7] = { 3500 };
	for (int i = 1; i < 7; i++)
		levels[i] = (zone[i] - zone[i - 1]) * (1-rate[i]) + levels[i-1];
	
	int T, S;
	cin >> T;
	int i = 0;
	while (i<7)
	{
		if (T <= levels[i])
			break;
		i++;
	}
	if (!i)
		S = T;
	else
	{
		S = (T - levels[i - 1]) / (1 - rate[i]) + zone[i - 1];
	}
	cout << S;
	return 0;

}



/**/